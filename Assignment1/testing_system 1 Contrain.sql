
DROP DATABASE IF EXISTS TESTING_SYSTEM_ASSIGNMENT_1;
CREATE DATABASE TESTING_SYSTEM_ASSIGNMENT_1;
USE	TESTING_SYSTEM_ASSIGNMENT_1;

-- CREATE TABLE: DEPARTMENT	
CREATE TABLE DEPARTMENT (
DEPARTMENTID	TINYINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
DEPARTMENTNAME	VARCHAR (50) NOT NULL
);

-- CREATE TABLE: POSITION	
CREATE TABLE POSITION (
POSITIONID		TINYINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
POSITIONNAME	ENUM ('DEV', 'TEST', 'SCRUM MASTER', 'PM') NOT NULL
);

-- CREATE TABLE: ACCOUNT
CREATE TABLE `ACCOUNT` (
ACCOUNTID		TINYINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
EMAIL			VARCHAR (50) DEFAULT ('KHONG CO MAIL'),
USERNAME		VARCHAR (50) NOT NULL CHECK (LENGTH(USERNAME)>=6),
FULLNAME		VARCHAR (50) NOT NULL,
DEPARTMENTID	TINYINT UNSIGNED DEFAULT(1), -- defaul: waiting room	
POSITIONID		TINYINT UNSIGNED CHECK (POSITIONID>=6 AND POSITIONID<20),
CREATEDATE		DATETIME DEFAULT NOW(),
FOREIGN KEY	(DEPARTMENTID) REFERENCES DEPARTMENT (DEPARTMENTID),
FOREIGN KEY	(POSITIONID) REFERENCES POSITION (POSITIONID)
);

-- CREATE TABLE: GROUP
CREATE TABLE `GROUP` (
GROUPID			TINYINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
GROUPNAME		VARCHAR (50) UNIQUE KEY	 NOT NULL,
CREATORID		TINYINT UNSIGNED NOT NULL CHECK (LENGTH(CREATORID)>=6),
CREATEDATE		DATE DEFAULT (current_date)
);

-- CREATE TABLE: GROUPACCOUNT
CREATE TABLE GROUPACCOUNT (
GROUPID			TINYINT UNSIGNED,
ACCOUNTID		TINYINT UNSIGNED CHECK(ACCOUNTID >=6 AND ACCOUNTID <20),
CREATEDATE		DATETIME DEFAULT NOW(),
PRIMARY KEY (GROUPID, ACCOUNTID),
FOREIGN KEY	(GROUPID) REFERENCES `GROUP` (GROUPID),
FOREIGN KEY	(ACCOUNTID) REFERENCES `ACCOUNT` (ACCOUNTID)
);

-- CREATE TABLE: TYPEQUESTION
CREATE TABLE TYPEQUESTION (
TYPEID			TINYINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
TYPENAME		ENUM ('ESSAY', 'MULTIPLE-CHOICE') NOT NULL
);

-- CREATE TABLE: CATEGORYQUESTION
CREATE TABLE CATEGORYQUESTION (
CATEGORYID		TINYINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
CATEGORYNAME	NVARCHAR (50) NOT NULL DEFAULT ('chua xac dinh')
);

-- CREATE TABLE: QUESTION
CREATE TABLE QUESTION (
QUESTIONID		TINYINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
CONTENT			VARCHAR (50) NOT NULL,
CATEGORYID		TINYINT UNSIGNED DEFAULT (1),-- Default: Doi phe duyet
TYPEID			TINYINT UNSIGNED DEFAULT (1),-- Default: Doi phe duyet
CREATORID		SMALLINT UNSIGNED CHECK (CREATORID>=8),
CREATEDATE		DATE DEFAULT (CURRENT_DATE),
FOREIGN KEY	(CATEGORYID) REFERENCES CATEGORYQUESTION (CATEGORYID)
);

-- CREATE TABLE: ANSWER
CREATE TABLE ANSWER (
ANSWERID		TINYINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
CONTENT			TINYINT UNSIGNED,
TITLE			VARCHAR (50) ,
CATEGORYID		TINYINT UNSIGNED,
DURATION		DATETIME,
CREATORID		TINYINT UNSIGNED DEFAULT(2),
CREATEDATE		DATE DEFAULT (CURRENT_DATE)
);

-- CREATE TABLE: EXAM
CREATE TABLE EXAM (
EXAMID			TINYINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
`CODE`			CHAR (20) UNIQUE KEY DEFAULT('CHUA UPDATE'),
TITLE			VARCHAR (50),
CATEGORYID		TINYINT UNSIGNED,
DURATION		DATETIME,
CREATORID		TINYINT UNSIGNED,
CREATEDATE		DATE DEFAULT (CURRENT_DATE)
);

-- CREATE TABLE: EXAMQUESTION
CREATE TABLE EXAMQUESTION (
EXAMID			TINYINT UNSIGNED DEFAULT(2), -- Default: Chua update
QUESTIONID		TINYINT UNSIGNED,
PRIMARY KEY (EXAMID, QUESTIONID),
FOREIGN KEY	(EXAMID) REFERENCES EXAMQUESTION (EXAMID)
);